{
    "version": "https://jsonfeed.org/version/1",
    "title": "超算之路",
    "description": "记录从0开始的超算学习之路",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2024/09/16/%E5%89%8D%E7%BD%AE%E5%87%86%E5%A4%87%EF%BC%9A%E5%A6%82%E4%BD%95%E5%BF%AB%E9%80%9F%E9%85%8D%E7%BD%AE%E8%B6%85%E7%AE%97%E7%8E%AF%E5%A2%83/",
            "url": "http://example.com/2024/09/16/%E5%89%8D%E7%BD%AE%E5%87%86%E5%A4%87%EF%BC%9A%E5%A6%82%E4%BD%95%E5%BF%AB%E9%80%9F%E9%85%8D%E7%BD%AE%E8%B6%85%E7%AE%97%E7%8E%AF%E5%A2%83/",
            "title": "前置准备：如何快速配置超算环境",
            "date_published": "2024-09-16T08:43:14.000Z",
            "content_html": "<h1 id=\"cuda的安装\"><a href=\"#cuda的安装\" class=\"headerlink\" title=\"cuda的安装\"></a>cuda的安装</h1><h2 id=\"确认系统信息\"><a href=\"#确认系统信息\" class=\"headerlink\" title=\"确认系统信息\"></a>确认系统信息</h2><p>当拿到一个服务器时，最重要的就是先确定该服务器的系统信息，我们首先要执行<code>cat /etc/issue</code>查看版本当前操作系统发行版信息。</p>\n<p><img loading=\"lazy\" data-src=\"https://cdn.jsdelivr.net/gh/barbedcotton/BlogImage@main/img/%E5%8F%91%E8%A1%8C%E7%89%88%E6%9C%AC%E5%8F%B7%E4%BF%A1%E6%81%AF.png\"></p>\n<p>由此可知我们接下来将使用Ubantu系统的相关语法来进行操作。接下来我们执行<code>nvidia-smi</code>来查看 GPU 支持的最高 CUDA 版本。</p>\n<p><img loading=\"lazy\" data-src=\"https://cdn.jsdelivr.net/gh/barbedcotton/BlogImage@main/img/%E6%98%BE%E5%8D%A1%E6%94%AF%E6%8C%81%E4%BF%A1%E6%81%AF.png\"></p>\n<p>笔者这里显示的是 12.4 ，这意味着，安装的 CUDA 版本必须 &lt;&#x3D; 12.4 。</p>\n<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h2>",
            "tags": []
        },
        {
            "id": "http://example.com/2024/09/08/Linux%E5%9F%BA%E7%A1%80%EF%BC%881%EF%BC%89%EF%BC%9Avim%E7%A8%8B%E5%BA%8F%E7%BC%96%E8%BE%91%E5%99%A8/",
            "url": "http://example.com/2024/09/08/Linux%E5%9F%BA%E7%A1%80%EF%BC%881%EF%BC%89%EF%BC%9Avim%E7%A8%8B%E5%BA%8F%E7%BC%96%E8%BE%91%E5%99%A8/",
            "title": "Linux基础（1）：vim程序编辑器",
            "date_published": "2024-09-08T15:13:23.000Z",
            "content_html": "<p>Linux的熟练应用对高性能计算领域而言是非常重要的，由于博主已自学过一点点Linux的基本命令，故本文将直接从vim程序编辑器开始记录学习，在学习的过程中夯实基本命令。在此，也默认虚拟机等必要环境都已配备完毕，接下来我将以VMware虚拟机环境下的CentOS 7系统为例，并搭配MobaXterm远程计算工具箱进行学习。本博客的参考资料为鸟哥的《Linux私房菜：基础版》以及黑马程序员的Linux课程笔记（主要用于基本命令的查阅）。</p>\n<h1 id=\"vim程序编辑器\"><a href=\"#vim程序编辑器\" class=\"headerlink\" title=\"vim程序编辑器\"></a>vim程序编辑器</h1><h2 id=\"三种工作模式\"><a href=\"#三种工作模式\" class=\"headerlink\" title=\"三种工作模式\"></a>三种工作模式</h2><p>我们将以test.txt文件为例，介绍vi的三种模式，首先我们进入文档文件夹，新建一个test.txt的文件。</p>\n<p><img loading=\"lazy\" data-src=\"https://i-blog.csdnimg.cn/direct/af908313fe0a4148820cdb32a147f2da.png\"></p>\n<p>①指令模式（command mode）</p>\n<p>默认模式，左下角会显示文件名，以及文本行数和字符数，可以进行复制粘贴、删除内容，通过键盘移动光标等操作。</p>\n<p><img loading=\"lazy\" data-src=\"https://i-blog.csdnimg.cn/direct/99251ac59eca428abb96fd3764bcc4ab.png\"></p>\n<p>②编辑模式 （insert mode）</p>\n<p>按下特定字母后，会进入编辑模式，此时，左下角显示”–INSERT–”，相关特定字母对应的操作如下表所示，按ESC即可退出到指令模式。</p>\n<p><img loading=\"lazy\" data-src=\"https://i-blog.csdnimg.cn/direct/8ee8245adc0549fa93e9f9a4b25cc49f.png\"></p>\n<p><strong>命令</strong></p>\n<p><strong>描述</strong></p>\n<p>i</p>\n<p>在当前光标位置进入输入模式</p>\n<p>I</p>\n<p>在当前行的开头进入输入模式</p>\n<p>a</p>\n<p>在当前光标位置之后进入输入模式</p>\n<p>A</p>\n<p>在当前行的结尾进入输入模式</p>\n<p>o</p>\n<p>在当前光标下一行进入输入模式</p>\n<p>O</p>\n<p>在当前光标上一行进入输入模式</p>\n<p>③命令行模式 （command-line mode）</p>\n<p>在<strong>指令模式</strong>下，输入”&#x2F;:?””三个中的任何一个字符，即可进入命令行模式，完成读取、储存等额外功能，此处以”:wq”为例，展示其保存退出并保存的功能。</p>\n<p><img loading=\"lazy\" data-src=\"https://i-blog.csdnimg.cn/direct/0e35cef109284f7cbc1ca8260f50a215.png\"></p>\n<p><img loading=\"lazy\" data-src=\"https://i-blog.csdnimg.cn/direct/a16bc1ed0929467a8f3ce4823ededa2d.png\"></p>\n<p>至此，vi的三种模式已全部介绍完毕，更多按键功能表请自行查阅~</p>\n<h2 id=\"vim的暂存功能\"><a href=\"#vim的暂存功能\" class=\"headerlink\" title=\"vim的暂存功能\"></a>vim的暂存功能</h2><p>使用vim编辑文件实际是先copy一份临时文件并映射到内存给你编辑，编辑的是临时文件。当多用户同时编译或vim因不明原因发生中断时，暂存档将不会消失，它会以隐藏文件的形式存入当前文件夹，输入ll -a即可查看。</p>\n<p><img loading=\"lazy\" data-src=\"https://i-blog.csdnimg.cn/direct/5fb92213bf874e7eb2fd6949174df886.png\"></p>\n<p>ps:原本以为vi也有暂存功能，看到后面才知道，原来目前大部分的 distributions 都以 vim 取代 vi 的功能了（&#x2F;捂脸）</p>\n<p><img loading=\"lazy\" data-src=\"https://i-blog.csdnimg.cn/direct/75f5185f2d6043e6bdfb06825d4b825f.png\"></p>\n<h2 id=\"vim的额外功能\"><a href=\"#vim的额外功能\" class=\"headerlink\" title=\"vim的额外功能\"></a>vim的额外功能</h2><h3 id=\"区块选择\"><a href=\"#区块选择\" class=\"headerlink\" title=\"区块选择\"></a>区块选择</h3><p>下图是一个动物园区域规划，动物园分为三个区域，位于同一个区域的不同动物要分居左右两侧，现在想要实现在红框中标明这些动物在哪个区域，要怎么办呢？</p>\n<p><img loading=\"lazy\" data-src=\"https://i-blog.csdnimg.cn/direct/ada688c85042437dbf1a5d302498647f.png\"></p>\n<p>没错，这便要用到区块选择的功能，其对应的功能表如下图所示：</p>\n<p><img loading=\"lazy\" data-src=\"https://i-blog.csdnimg.cn/direct/290e49bf9bb1483a8af95b21c384122d.png\"></p>\n<p> 按下ctrl+v左下角出现”– VISUAL BLOCK –”字样，通过<strong>键盘移动光标</strong>选中区块，按y复制，再通过编辑模式输入空格移动光标至指定位置后，回到指令模式按p粘贴即可。</p>\n<p>​      <img loading=\"lazy\" data-src=\"https://i-blog.csdnimg.cn/direct/267c7908deea4949ba6740b1418be7e3.png\">                    <img loading=\"lazy\" data-src=\"https://i-blog.csdnimg.cn/direct/9fabc642a312491ba35fdf073fe70f92.png\"></p>\n<h3 id=\"多文件编辑\"><a href=\"#多文件编辑\" class=\"headerlink\" title=\"多文件编辑\"></a>多文件编辑</h3><p>先通过vim animal food指令打开两个文件，分别为动物园区域规划和喂养动物所匹配的食物，现在要在food文件中，实现每一种食物都与animal文件中的动物相匹配。</p>\n<p><img loading=\"lazy\" data-src=\"https://i-blog.csdnimg.cn/direct/9ab0fd6dcd2e4175a4cc333001812da9.png\"></p>\n<p>在命令行模式下输入:files可以看到我们已经打开了两个文件，其中animal文件正在被编辑（%a），按任意键可返回指令模式。</p>\n<p> 之后把光标移动至第一行第一列，直接输入11yy复制前11列（这里鸟哥的教参出错了，<strong>nyy是复制n行，不是n列，</strong>推荐使用区块选择功能），再输入:n进入下一个文件，即food文件，指令模式下输入$（这里也是，鸟哥的教参用的是G，<strong>G指令是移动到最后一行，而不是最后一列</strong>），将光标移动至最后一列（可有可无，也可以直接进入编辑模式操作，还能加俩空格更好看，只是这样更快捷），输入p完成粘贴。（以上出错内容位于教参的P473）</p>\n<p><img loading=\"lazy\" data-src=\"https://i-blog.csdnimg.cn/direct/0f4855d527a549f087879cbe7a062ab8.png\"></p>\n<h3 id=\"多窗口功能\"><a href=\"#多窗口功能\" class=\"headerlink\" title=\"多窗口功能\"></a>多窗口功能</h3><p> 主要是用于方便前后对照使用，如下图sudoers文件中，可以实现连续阅读（找不到合适的文件进行说明，单单这功能的话还是比较鸡肋的，毕竟单窗口也能解决），主要还是用于后面需要前面的数据支撑，进行查阅使用。</p>\n<p><img loading=\"lazy\" data-src=\"https://i-blog.csdnimg.cn/direct/a875551ac7344b428c9f8d5e61d8ce44.png\"></p>\n<p>其具体的操作不再赘述，详细功能表如下图所示：</p>\n<p><img loading=\"lazy\" data-src=\"https://i-blog.csdnimg.cn/direct/244212c508d646b897a83faf46599f03.png\"></p>\n<h4 id=\"挑字补全功能\"><a href=\"#挑字补全功能\" class=\"headerlink\" title=\"挑字补全功能\"></a>挑字补全功能</h4><p> 其功能表如下图所示，因bash自带补全一键补全功能，在此不再赘述O(∩_∩)O~~</p>\n<p><img loading=\"lazy\" data-src=\"https://i-blog.csdnimg.cn/direct/8e6472fb2a914318a2f5e1806e1ecaa0.png\"></p>\n",
            "tags": [
                "Linux",
                "vim程序编辑器",
                "高性能计算"
            ]
        }
    ]
}